<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 24페이지. 'Namespaces'에서 security 체크 -->
	
	<!-- 1번 -->
	<!-- security 적용하지 않기 위한 코드. -->
	<security:http pattern="/css/**" security="none" />
	
	<security:http>
		<!-- 해당 url은 순차적으로 진행됨(중요) -->
		<security:intercept-url pattern="/top.jsp" access="permitAll()" />
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')" />
		<!-- **는 모든 경로를 뜻함. 맨 마지막에 있어야 함. -->
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:form-login default-target-url="/top.jsp" />
		<security:logout logout-url="/logout" logout-success-url="/top.jsp" />
		<!-- 담당자는 csrf 적용되는 것 확인. POST방식에 token을 보내야 함 -->
		<!-- <security:csrf disabled="true" /> -->
	</security:http>
	
	<bean id="userDetailService" class="com.yedam.app.user.service.CustomerUserDetailsService"/>
	
	<security:authentication-manager>
		<!-- user-service-ref에는 CustomerUserDetailsService에서 작성한 service의 명칭 -->
		<security:authentication-provider user-service-ref="userDetailService">
		
			<!-- <security:user-service>
				인증을 처리하는 주체
				<security:user name="user" password="{noop}1234" authorities="ROLE_USER" />
				<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN" />
			</security:user-service> -->
			
			
			<!-- db값을 확인하기 위한 과정. 마이바티스 연결x -->
			<!-- service 작성 후 지워짐 -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT login_id, '{noop}'||password, 1
										 FROM t_user
										 WHERE login_id = ?"
				authorities-by-username-query="SELECT login_id, role_name
												FROM T_USER JOIN T_USER_ROLE
												ON T_USER.id = T_USER_ROLE.user_id
												                JOIN T_ROLE
												ON T_USER_ROLE.role_id = T_ROLE.id
												WHERE login_id = ?"
			/> -->
			
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
